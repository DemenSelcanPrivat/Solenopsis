/**
	Copyright 2011 Red Hat Inc.

	This file is part of solenopsis

	solenopsis is free software; you can redistribute it and/or
	modify it under the terms of the GNU General Public License
	as published by the Free Software Foundation; either version 3
	of the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program; if not, write to the Free Software
	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
**/

import org.eclipse.jgit.api.Status;
import org.eclipse.jgit.lib.IndexDiff;
import org.eclipse.jgit.storage.file.FileRepository;
import org.eclipse.jgit.treewalk.FileTreeIterator;

File findGitDir(File dir) {
	if(null == dir) {
		return null;
	}

	File gitDir = new File(dir, ".git");

	if (gitDir.exists()) {
		return gitDir;
	}

	return findGitDir(dir.getParentFile());
}

String buildValues(String baseDir, String delimiter, String ignorePattern, Set values) {
	StringBuilder sb = new StringBuilder();

	for(String value : values) {
		if(!value.endsWith(ignorePattern)) {
			sb.append("".equals(baseDir) ?  value : value.substring(baseDir.length())).append(delimiter);
		}
	}

	return sb.toString();
}

String computeBase(File dir, File gitDir) {
	if (!dir.equals(gitDir)) {
		return dir.getPath().substring(gitDir.getParentFile().getPath().length() + 1) + System.getProperty("file.separator");
	}

	return "";
}

File dir = new File(attributes.get("dir"));

File gitDir = findGitDir(dir);

if (null == gitDir) {
	return;
}

FileRepository repository = new FileRepository(gitDir);
IndexDiff indexDiff = new IndexDiff(repository, "HEAD", new FileTreeIterator(repository));

indexDiff.diff();

Status status = new Status(indexDiff);

String baseDir = computeBase(dir, gitDir);

project.setProperty(attributes.get("addproperty"), buildValues(baseDir, attributes.get("delimiter"), attributes.get("ignorepattern"), status.getUntracked()));
project.setProperty(attributes.get("modproperty"), buildValues(baseDir, attributes.get("delimiter"), attributes.get("ignorepattern"), status.getModified()));
project.setProperty(attributes.get("delproperty"), buildValues(baseDir, attributes.get("delimiter"), attributes.get("ignorepattern"), status.getMissing()));